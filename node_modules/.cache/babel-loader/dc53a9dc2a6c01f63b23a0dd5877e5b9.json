{"ast":null,"code":"import React from'react';import Photo from'./Photo';import NotFound from'./NotFound';import{useParams}from'react-router-dom';var PhotoContainer=function PhotoContainer(_ref){var data=_ref.data;//Take search parameters from the URL and pass string into the data object to return queried object\nvar _useParams=useParams(),search=_useParams.search;if(search==='React-Gallery-App'){search='mountain';}var dataObject=data[\"\".concat(search)];//Declare photos variable. .map() over the object and return photo components for each image in object.\nvar photos='';if(dataObject){var photosMap=dataObject.map(function(image){return React.createElement(Photo,{id:image.id,farmID:image.farm,serverID:image.server,secret:image.secret,title:image.title,key:image.id});});photos=photosMap;}//Determine if photos exist. If not, will return value '0'\nvar photosExist=photos.length;//If photos exist, load header text for query, else header will produce 'loading...'\n//If photos exist, render the photos, else render Not Found component\nreturn React.createElement(\"div\",{className:\"photo-container\"},React.createElement(\"h2\",null,photosExist?search:'Loading...'),React.createElement(\"ul\",null,photosExist?photos:React.createElement(NotFound,{query:search})));};export default PhotoContainer;","map":{"version":3,"sources":["/Users/joseph/Documents/GitHub/React-Gallery/src/components/PhotoContainer.js"],"names":["React","Photo","NotFound","useParams","PhotoContainer","data","search","dataObject","photos","photosMap","map","image","id","farm","server","secret","title","photosExist","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAAQC,SAAR,KAAwB,kBAAxB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAY,IAAVC,CAAAA,IAAU,MAAVA,IAAU,CAE/B;AAF+B,eAGhBF,SAAS,EAHO,CAG1BG,MAH0B,YAG1BA,MAH0B,CAI/B,GAAGA,MAAM,GAAK,mBAAd,CAAmC,CACjCA,MAAM,CAAG,UAAT,CACD,CACD,GAAIC,CAAAA,UAAU,CAAGF,IAAI,WAAIC,MAAJ,EAArB,CAEA;AACA,GAAIE,CAAAA,MAAM,CAAC,EAAX,CACA,GAAGD,UAAH,CAAe,CACX,GAAIE,CAAAA,SAAS,CAAGF,UAAU,CAACG,GAAX,CAAe,SAAAC,KAAK,QAAI,qBAAC,KAAD,EAAO,EAAE,CAAEA,KAAK,CAACC,EAAjB,CAAqB,MAAM,CAAED,KAAK,CAACE,IAAnC,CAAyC,QAAQ,CAAEF,KAAK,CAACG,MAAzD,CAAiE,MAAM,CAAEH,KAAK,CAACI,MAA/E,CAAuF,KAAK,CAAEJ,KAAK,CAACK,KAApG,CAA2G,GAAG,CAAEL,KAAK,CAACC,EAAtH,EAAJ,EAApB,CAAhB,CACAJ,MAAM,CAAGC,SAAT,CACH,CACD;AACA,GAAIQ,CAAAA,WAAW,CAAGT,MAAM,CAACU,MAAzB,CAEA;AACA;AACA,MACI,4BAAK,SAAS,CAAC,iBAAf,EACQ,8BAAKD,WAAW,CAAGX,MAAH,CAAY,YAA5B,CADR,CAEQ,8BACKW,WAAW,CAAGT,MAAH,CAAY,oBAAC,QAAD,EAAU,KAAK,CAAEF,MAAjB,EAD5B,CAFR,CADJ,CAQH,CA5BD,CA8BA,cAAeF,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport Photo from './Photo';\nimport NotFound from './NotFound';\nimport {useParams} from 'react-router-dom';\n\nconst PhotoContainer = ({data}) => {\n\n    //Take search parameters from the URL and pass string into the data object to return queried object\n    let {search} = useParams();\n    if(search === 'React-Gallery-App') {\n      search = 'mountain';\n    }\n    let dataObject = data[`${search}`]\n\n    //Declare photos variable. .map() over the object and return photo components for each image in object.\n    let photos='';\n    if(dataObject) {\n        let photosMap = dataObject.map(image => <Photo id={image.id} farmID={image.farm} serverID={image.server} secret={image.secret} title={image.title} key={image.id}/>)\n        photos = photosMap;\n    }\n    //Determine if photos exist. If not, will return value '0'\n    let photosExist = photos.length;\n\n    //If photos exist, load header text for query, else header will produce 'loading...'\n    //If photos exist, render the photos, else render Not Found component\n    return (\n        <div className=\"photo-container\">\n                <h2>{photosExist ? search : 'Loading...'}</h2>\n                <ul>\n                    {photosExist ? photos : <NotFound query={search}/>}\n                </ul>\n        </div>\n    );\n};\n\nexport default PhotoContainer;\n"]},"metadata":{},"sourceType":"module"}